{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "smartHTMLMode"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            },
            "languageVersion": "ES2015",
            "scripts": "vendor/d3sparql.js",
            "libraries": [
                {
                    "name": "yasqe",
                    "latest": "https://cdnjs.cloudflare.com/ajax/libs/yasqe/2.11.7/yasqe.bundled.min.js",
                    "version": "2.11.7",
                    "description": "Yet Another SPARQL Query Editor",
                    "homepage": "http://yasqe.yasgui.org"
                },
                {
                    "name": "yasr",
                    "latest": "https://cdnjs.cloudflare.com/ajax/libs/yasr/2.10.6/yasr.bundled.min.js",
                    "version": "2.10.6",
                    "description": "Yet Another SPARQL Resultset Visualizer",
                    "homepage": "http://yasr.yasgui.org"
                },
                {
                    "name": "jsdiff",
                    "latest": "https://cdnjs.cloudflare.com/ajax/libs/jsdiff/3.2.0/diff.min.js",
                    "version": "3.2.0",
                    "description": "A javascript text diff implementation.",
                    "homepage": null
                }
            ]
        },
        {
            "name": "SQL",
            "plugin": "SQL",
            "imports": "",
            "view": {
                "cm": {
                    "mode": "text/x-sql"
                }
            }
        },
        {
            "name": "Clojure",
            "plugin": "Clojure",
            "imports": "com.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.NamespaceClient\norg.joda.time.ReadablePartial\norg.joda.time.ReadableDateTime\norg.joda.time.ReadablePeriod\norg.joda.time.DateTime\norg.joda.time.DateMidnight\norg.joda.time.YearMonth\norg.joda.time.LocalDate\norg.joda.time.LocalTime\norg.joda.time.DateTimeZone\norg.joda.time.Period\norg.joda.time.PeriodType\norg.joda.time.Interval\norg.joda.time.Years\norg.joda.time.LocalDateTime\norg.joda.time.Chronology\norg.joda.time.format.DateTimeFormat\norg.joda.time.format.DateTimeFormatter\norg.joda.time.format.DateTimePrinter\norg.joda.time.format.DateTimeFormatterBuilder\norg.joda.time.format.DateTimeParser\norg.joda.time.format.ISODateTimeFormat\norg.joda.time.tz.FixedDateTimeZone\norg.joda.time.Months\norg.joda.time.Weeks\norg.joda.time.Days\norg.joda.time.Hours\norg.joda.time.Minutes\norg.joda.time.Seconds\norg.joda.time.MutableDateTime\norg.joda.time.DateTimeUtils\ncom.hp.hpl.jena.query.Syntax\ncom.hp.hpl.jena.query.Query\ncom.hp.hpl.jena.query.QueryExecution\ncom.hp.hpl.jena.query.QueryExecutionFactory\ncom.hp.hpl.jena.query.ARQ\ncom.hp.hpl.jena.query.QueryFactory\ncom.hp.hpl.jena.query.QuerySolution\ncom.hp.hpl.jena.query.QuerySolutionMap\ncom.hp.hpl.jena.query.ResultSet\ncom.hp.hpl.jena.query.ResultSetFormatter\ncom.hp.hpl.jena.sparql.modify.UpdateProcessRemote\ncom.hp.hpl.jena.sparql.modify.UpdateProcessRemoteForm\ncom.hp.hpl.jena.update.UpdateFactory\ncom.hp.hpl.jena.update.UpdateExecutionFactory\ncom.hp.hpl.jena.update.UpdateRequest\ncom.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP\njava.io.ByteArrayOutputStream",
            "view": {
                "cm": {
                    "mode": "text/x-clojure"
                }
            },
            "classPath": "/Users/dcmcshan/Documents/KaBOB/sparqler/target/uberjar/sparqler-0.1.0-SNAPSHOT-standalone.jar"
        }
    ],
    "cells": [
        {
            "id": "section7uxqCi",
            "type": "section",
            "title": "Appendix C, Example 1",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": true
        },
        {
            "id": "section2uo124",
            "type": "section",
            "title": "Introduction",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": false
        },
        {
            "id": "codeTCSG4m",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(refer 'sparqler.core)",
                    "(assert kabob)"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay",
                "pluginName": "Clojure",
                "shellId": "30ed8b22-7e6a-4b1e-9275-475b24180d1d",
                "elapsedTime": 186,
                "height": 52
            },
            "evaluatorReader": false,
            "lineCount": 2,
            "isError": false
        },
        {
            "id": "sectionyMx625",
            "type": "section",
            "title": "Query",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": true
        },
        {
            "id": "sectiondKj813",
            "type": "section",
            "title": "Manual SPARQL",
            "level": 3,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": true
        },
        {
            "id": "markdownBeQdxq",
            "type": "markdown",
            "body": [
                "The following cell will be stored in the beaker.query1 variable...."
            ],
            "evaluatorReader": false
        },
        {
            "id": "query1",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "PREFIX franzOption_clauseReorderer: <franz:identity>",
                    "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>",
                    "PREFIX owl: <http://www.w3.org/2002/07/owl#>",
                    "PREFIX obo: <http://purl.obolibrary.org/obo/>",
                    "PREFIX kbio: <http://kabob.ucdenver.edu/bio/>",
                    "PREFIX iaohgnc: <http://kabob.ucdenver.edu/iao/hgnc/>",
                    "",
                    "",
                    "SELECT ?participant ",
                    "WHERE {",
                    "",
                    "iaohgnc:HGNC_SEPT2_ICE obo:IAO_0000219 ?gene  . # SEPT2",
                    "",
                    "## gene specific gene or gene product abstraction ?gorgporv",
                    "?gene rdfs:subClassOf* ?gorgporv .  ",
                    "?gorgporv rdf:type kbio:GeneSpecificGorGPorVClass .",
                    "",
                    "## all gene products",
                    "?geneproduct rdfs:subClassOf* ?gorgporv.",
                    "",
                    "## get interactions they participate in",
                    "?participant_r owl:someValuesFrom ?geneproduct.",
                    "?participant_r owl:onProperty obo:RO_0000057 . # RO:has_participant",
                    "?interaction rdfs:subClassOf ?participant_r .",
                    "",
                    "## look at only interactions",
                    "?interaction rdfs:subClassOf obo:MI_0407 . # interaction",
                    "",
                    "## get all the other participants in those interactions",
                    "?interaction rdfs:subClassOf ?participant_r2.",
                    "FILTER (?participant_r != ?participant_r2) . # insure different",
                    "?participant_r2 owl:onProperty obo:RO_0000057 . # RO:has_participant",
                    "?participant_r2 owl:someValuesFrom ?participant.",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "com.twosigma.beaker.sqlsh.utils.DBConnectionException: Connection URI:; No suitable driver"
                    ]
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "SQL",
                "shellId": "155639de-68f2-493b-8a01-9f5cab953f5b",
                "elapsedTime": 141,
                "height": 62
            },
            "evaluatorReader": true,
            "lineCount": 34,
            "isError": true
        },
        {
            "id": "code5EAfdW",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.query1 = beaker.getCodeCells('query1')[0].code"
                ]
            },
            "output": {
                "state": {},
                "result": "PREFIX franzOption_clauseReorderer: <franz:identity>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX kbio: <http://kabob.ucdenver.edu/bio/>\nPREFIX iaohgnc: <http://kabob.ucdenver.edu/iao/hgnc/>\n\n\nSELECT ?participant \nWHERE {\n\niaohgnc:HGNC_SEPT2_ICE obo:IAO_0000219 ?gene  . # SEPT2\n\n## gene specific gene or gene product abstraction ?gorgporv\n?gene rdfs:subClassOf* ?gorgporv .  \n?gorgporv rdf:type kbio:GeneSpecificGorGPorVClass .\n\n## all gene products\n?geneproduct rdfs:subClassOf* ?gorgporv.\n\n## get interactions they participate in\n?participant_r owl:someValuesFrom ?geneproduct.\n?participant_r owl:onProperty obo:RO_0000057 . # RO:has_participant\n?interaction rdfs:subClassOf ?participant_r .\n\n## look at only interactions\n?interaction rdfs:subClassOf obo:MI_0407 . # interaction\n\n## get all the other participants in those interactions\n?interaction rdfs:subClassOf ?participant_r2.\nFILTER (?participant_r != ?participant_r2) . # insure different\n?participant_r2 owl:onProperty obo:RO_0000057 . # RO:has_participant\n?participant_r2 owl:someValuesFrom ?participant.\n}",
                "selectedType": "Text",
                "height": 46,
                "pluginName": "JavaScript",
                "elapsedTime": 36,
                "hidden": true
            },
            "evaluatorReader": true,
            "lineCount": 1,
            "isError": false
        },
        {
            "id": "sectionS9J1Gx",
            "type": "section",
            "title": "SPARQLer",
            "level": 3,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": true
        },
        {
            "id": "sectionTDCHIh",
            "type": "section",
            "title": "Step 1: Convert to clojure and define constants",
            "level": 4,
            "evaluatorReader": false,
            "collapsed": false,
            "isError": true
        },
        {
            "id": "codelJ3QGV",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "",
                    ""
                ]
            },
            "output": {
                "state": {},
                "result": "sparqler.core",
                "selectedType": "Text",
                "pluginName": "Clojure",
                "shellId": "41cb84f5-a717-4360-ad40-6bfe06bb6391",
                "elapsedTime": 198,
                "height": 46
            },
            "evaluatorReader": false,
            "lineCount": 2,
            "isError": false
        },
        {
            "id": "codea8pfZD",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    ""
                ]
            },
            "output": {
                "state": {}
            },
            "evaluatorReader": false
        },
        {
            "id": "codeAaaeVB",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(in-ns 'sparqler.core)",
                    "",
                    "(def MI:interaction [:obo :MI_0407])",
                    "",
                    "(defquery septin2-participants []",
                    "  ",
                    "  (select :participant)",
                    "  ",
                    "  (where ",
                    "    ;iaohgnc:HGNC_SEPT2_ICE obo:IAO_0000219 ?gene  .",
                    "    [:iaohgnc :HGNC_SEPT2_ICE] iao:denotes :gene \\.",
                    "",
                    "    ;## gene specific gene or gene product abstraction ?gorgporv",
                    "    ;?gene rdfs:subClassOf* ?gorgporv .  ",
                    "    ;?gorgporv rdf:type kbio:GeneSpecificGorGPorVClass .",
                    "    (gene-or-gene-products :gene :gorgporv)",
                    "    ",
                    "    ;## all gene products",
                    "    ;?geneproduct rdfs:subClassOf* ?gorgporv.",
                    "    :geneproduct rdfs:subClassOf* :gorgporv \\.",
                    "",
                    "    ;## get interactions they participate in",
                    "    :participant_r owl:someValuesFrom :geneproduct \\.",
                    "    :participant_r owl:onProperty RO:has_participant \\. ;# RO:has_participant",
                    "    :interaction rdfs:subClassOf :participant_r \\.",
                    "",
                    "    ;## look at only interactions",
                    "    :interaction rdfs:subClassOf MI:interaction \\. ;# interaction",
                    "",
                    "    ;## get all the other participants in those interactions",
                    "    :interaction rdfs:subClassOf :participant_r2 \\.",
                    "    (filter :participant_r != :participant_r2) \\. ;# insure different",
                    "    :participant_r2 owl:onProperty RO:has_participant \\. ;# RO:has_participant",
                    "    :participant_r2 owl:someValuesFrom :participant \\.",
                    "    )",
                    "  )",
                    ""
                ]
            },
            "output": {
                "state": {},
                "result": "#'sparqler.core/septin2-participants",
                "selectedType": "Text",
                "pluginName": "Clojure",
                "shellId": "30ed8b22-7e6a-4b1e-9275-475b24180d1d",
                "elapsedTime": 155,
                "height": 46
            },
            "evaluatorReader": false,
            "lineCount": 37,
            "isError": false
        },
        {
            "id": "codeMJn1kf",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(#'sparqler.core/septin2-participants)"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "java.lang.IllegalArgumentException: Cannot resolve namespace: :iaohgnc",
                        "\tat boutros.matsu.core$ns_or_error.invoke(core.clj:55)",
                        "\tat boutros.matsu.compiler$infer_prefixes$iter__1247__1251$fn__1252.invoke(compiler.clj:101)",
                        "\tat clojure.lang.LazySeq.sval(LazySeq.java:40)",
                        "\tat clojure.lang.LazySeq.seq(LazySeq.java:49)",
                        "\tat clojure.lang.RT.seq(RT.java:507)",
                        "\tat clojure.core$seq__4128.invoke(core.clj:137)",
                        "\tat clojure.core$apply.invoke(core.clj:630)",
                        "\tat boutros.matsu.compiler$infer_prefixes.invoke(compiler.clj:98)",
                        "\tat boutros.matsu.compiler$compile_query.invoke(compiler.clj:124)",
                        "\tat sparqler.core$septin2_participants.invoke(Unknown Source)",
                        "\tat clojure.lang.Var.invoke(Var.java:375)",
                        "\tat beaker_clojure_shell_30ed8b22_7e6a_4b1e_9275_475b24180d1d$eval2321.invoke(Unknown Source)",
                        "\tat clojure.lang.Compiler.eval(Compiler.java:6782)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7227)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7174)",
                        "\tat clojure.core$load_reader.invoke(core.clj:3933)",
                        "\tat clojure.core$load_string.invoke(core.clj:3943)",
                        "\tat beaker_clojure_shell_30ed8b22_7e6a_4b1e_9275_475b24180d1d$run_str_30ed8b22_7e6a_4b1e_9275_475b24180d1d.invoke(Unknown Source)",
                        "\tat clojure.lang.Var.invoke(Var.java:379)",
                        "\tat com.twosigma.beaker.clojure.util.ClojureEvaluator$workerThread$MyRunnable.run(ClojureEvaluator.java:239)",
                        "\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)",
                        "\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "\tat java.lang.Thread.run(Thread.java:745)",
                        ""
                    ]
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Clojure",
                "shellId": "30ed8b22-7e6a-4b1e-9275-475b24180d1d",
                "elapsedTime": 166,
                "height": 62
            },
            "evaluatorReader": false,
            "lineCount": 1,
            "isError": true
        },
        {
            "id": "codeJgchaz",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(beaker :set \"query2\" (#'sparqler.core/septin2-participants))"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay",
                "pluginName": "Clojure",
                "elapsedTime": 210,
                "height": 62,
                "shellId": "41cb84f5-a717-4360-ad40-6bfe06bb6391",
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "java.lang.IllegalArgumentException: Cannot resolve namespace: :iaohgnc",
                        "\tat boutros.matsu.core$ns_or_error.invoke(core.clj:55)",
                        "\tat boutros.matsu.compiler$infer_prefixes$iter__1247__1251$fn__1252.invoke(compiler.clj:101)",
                        "\tat clojure.lang.LazySeq.sval(LazySeq.java:40)",
                        "\tat clojure.lang.LazySeq.seq(LazySeq.java:49)",
                        "\tat clojure.lang.RT.seq(RT.java:507)",
                        "\tat clojure.core$seq__4128.invoke(core.clj:137)",
                        "\tat clojure.core$apply.invoke(core.clj:630)",
                        "\tat boutros.matsu.compiler$infer_prefixes.invoke(compiler.clj:98)",
                        "\tat boutros.matsu.compiler$compile_query.invoke(compiler.clj:124)",
                        "\tat sparqler.core$septin2_participants.invoke(Unknown Source)",
                        "\tat clojure.lang.Var.invoke(Var.java:375)",
                        "\tat beaker_clojure_shell_41cb84f5_a717_4360_ad40_6bfe06bb6391$eval2172.invoke(Unknown Source)",
                        "\tat clojure.lang.Compiler.eval(Compiler.java:6782)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7227)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7174)",
                        "\tat clojure.core$load_reader.invoke(core.clj:3933)",
                        "\tat clojure.core$load_string.invoke(core.clj:3943)",
                        "\tat beaker_clojure_shell_41cb84f5_a717_4360_ad40_6bfe06bb6391$run_str_41cb84f5_a717_4360_ad40_6bfe06bb6391.invoke(Unknown Source)",
                        "\tat clojure.lang.Var.invoke(Var.java:379)",
                        "\tat com.twosigma.beaker.clojure.util.ClojureEvaluator$workerThread$MyRunnable.run(ClojureEvaluator.java:239)",
                        "\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)",
                        "\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "\tat java.lang.Thread.run(Thread.java:745)",
                        ""
                    ]
                }
            },
            "evaluatorReader": false,
            "lineCount": 1,
            "isError": true
        },
        {
            "id": "codeaM7DUI",
            "type": "code",
            "evaluator": "HTML",
            "input": {
                "body": [
                    "<pre id=\"display\"></pre>"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Html",
                    "object": "<script>\nvar beaker = bkHelper.getBeakerObject().beakerObj;\n</script>\n<pre id=\"display\"><span style=\"color: grey;\">PREFIX </span><span style=\"color: green;\">franz: &lt;http://franz.c</span><span style=\"color: grey;\">o</span><span style=\"color: green;\">m&gt; PREFIX kiao: &lt;http://ka</span><span style=\"color: grey;\">bo</span><span style=\"color: green;\">b.ucdenver.edu/iao/&gt; PREFIX obo</span><span style=\"color: grey;\">: &lt;http://purl.obolibrary.org/obo/&gt;</span><span style=\"color: red;\">\n</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">PREFIX </span><span style=\"color: red;\">rdfs</span><span style=\"color: green;\">oboMeta</span><span style=\"color: grey;\">: &lt;http://www.</span><span style=\"color: red;\">w3</span><span style=\"color: green;\">geneontology</span><span style=\"color: grey;\">.org/</span><span style=\"color: red;\">2000/01/</span><span style=\"color: green;\">fo</span><span style=\"color: grey;\">r</span><span style=\"color: red;\">df-sche</span><span style=\"color: grey;\">ma</span><span style=\"color: green;\">ts/oboInOwl</span><span style=\"color: grey;\">#&gt;</span><span style=\"color: red;\">\n</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">PREFIX owl: &lt;http://www.w3.org/2002/07/owl#&gt;</span><span style=\"color: red;\">\n</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">PREFIX </span><span style=\"color: red;\">oboMeta</span><span style=\"color: green;\">rdf</span><span style=\"color: grey;\">: &lt;http://www.</span><span style=\"color: red;\">geneontology</span><span style=\"color: green;\">w3</span><span style=\"color: grey;\">.org/</span><span style=\"color: green;\">1999/02/22-rd</span><span style=\"color: grey;\">f</span><span style=\"color: red;\">orm</span><span style=\"color: green;\">-synt</span><span style=\"color: grey;\">a</span><span style=\"color: red;\">t</span><span style=\"color: green;\">x-n</span><span style=\"color: grey;\">s</span><span style=\"color: red;\">/oboInOwl</span><span style=\"color: grey;\">#&gt;</span><span style=\"color: red;\">\n</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">PREFIX </span><span style=\"color: red;\">kiao</span><span style=\"color: green;\">rdfs</span><span style=\"color: grey;\">: &lt;http://</span><span style=\"color: red;\">kab</span><span style=\"color: green;\">www.w3.</span><span style=\"color: grey;\">o</span><span style=\"color: red;\">b.u</span><span style=\"color: green;\">rg/2000/01/rdf-s</span><span style=\"color: grey;\">c</span><span style=\"color: red;\">d</span><span style=\"color: green;\">h</span><span style=\"color: grey;\">e</span><span style=\"color: red;\">nver.edu/i</span><span style=\"color: green;\">m</span><span style=\"color: grey;\">a</span><span style=\"color: red;\">o/</span><span style=\"color: green;\">#</span><span style=\"color: grey;\">&gt;</span><span style=\"color: red;\">\n</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">PREFIX </span><span style=\"color: red;\">iao</span><span style=\"color: grey;\">uniprot: &lt;http://kabob.ucdenver.edu/iao/uniprot/&gt;</span><span style=\"color: red;\">\n</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">PREFIX franzOption_clauseReorderer: &lt;franz:identity&gt;\n</span><span style=\"color: green;\">\n           </span><span style=\"color: grey;\">PREFIX franzOption_chunkProcessingAllowed: &lt;franz:yes&gt;\n</span><span style=\"color: green;\">\n           </span><span style=\"color: grey;\">PREFIX franzOption_memoryLimit: &lt;franz:60g&gt;\n</span><span style=\"color: green;\">\n           </span><span style=\"color: grey;\">PREFIX franzOption_memoryExhaustionWarningPercentage: &lt;franz:90.0&gt;\n</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\">SELECT DISTINCT ?angioSubs ?partProtId ?intProtId </span><span style=\"color: red;\">\n\n</span><span style=\"color: grey;\">WHERE {</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">\n</span><span style=\"color: green;\"># VEGF - angiogenesis GOBP/subclasses, the proteins that participate in those GOBPs, and their protein-protein interactions .</span><span style=\"color: grey;\">\n </span><span style=\"color: green;\">\n#</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">#</span><span style=\"color: grey;\">select angiogenesis GOBPs and its subclasses that are in the OBO namespace</span><span style=\"color: green;\"> .</span><span style=\"color: grey;\">\n </span><span style=\"color: green;\">{</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">SELECT ?angioSubs { </span><span style=\"color: grey;\">\n</span><span style=\"color: green;\">#</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">subclasses</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">of [:obo :GO_0001525] .\n </span><span style=\"color: grey;\">?angioSubs rdfs:subClassOf* obo:GO_0001525 . </span><span style=\"color: red;\">#angiogenesis\n  </span><span style=\"color: grey;\">?angioSubs oboMeta:hasOBONamespace ?OBONamespace </span><span style=\"color: red;\">.</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">#OBO</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">ns (BPs)</span><span style=\"color: grey;\">\n</span><span style=\"color: red;\">\n</span><span style=\"color: green;\">#</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> #</span><span style=\"color: grey;\">restriction </span><span style=\"color: red;\">- </span><span style=\"color: grey;\">only want human proteins that participate in these GOBPs</span><span style=\"color: green;\"> .</span><span style=\"color: grey;\">\n </span><span style=\"color: green;\">{</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">SELECT ?protClass ?angioSubs { </span><span style=\"color: grey;\">\n</span><span style=\"color: green;\">#</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">proteins</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">that participate in a subclass .\n </span><span style=\"color: grey;\">?anonSubclass rdfs:subClassOf ?angioSubs .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?anonSubclass rdfs:subClassOf ?protRest .</span><span style=\"color: red;\">\n\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protRest rdf:type owl:Restriction .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protRest owl:onProperty obo:RO_0000057 . </span><span style=\"color: red;\">#has_participant\n  </span><span style=\"color: grey;\">?protRest owl:someValuesFrom ?protSub .</span><span style=\"color: red;\">\n\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protSub rdfs:subClassOf ?protClass .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protClass rdfs:subClassOf* obo:CHEBI_36080 . </span><span style=\"color: red;\">#protein\n</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> ?partProtId obo:IAO_0000219 ?protClass .</span><span style=\"color: green;\"> { SELECT ?protClass { </span><span style=\"color: grey;\">\n</span><span style=\"color: green;\"># Gene or Gene Products in_taxon [:obo :NCBITaxon_9606] .</span><span style=\"color: grey;\">\n </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protClass rdfs:subClassOf ?taxon</span><span style=\"color: red;\">R</span><span style=\"color: green;\">r</span><span style=\"color: grey;\">est</span><span style=\"color: green;\">riction</span><span style=\"color: grey;\"> .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?taxon</span><span style=\"color: red;\">R</span><span style=\"color: green;\">r</span><span style=\"color: grey;\">est</span><span style=\"color: green;\">riction</span><span style=\"color: grey;\"> owl:onProperty obo:RO_0002162 . </span><span style=\"color: red;\">#in taxon\n  </span><span style=\"color: grey;\">?taxon</span><span style=\"color: red;\">R</span><span style=\"color: green;\">r</span><span style=\"color: grey;\">est</span><span style=\"color: green;\">riction</span><span style=\"color: grey;\"> owl:someValuesFrom obo:NCBITaxon_9606 . </span><span style=\"color: red;\">#human\n\n</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">\n</span><span style=\"color: grey;\">#</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">swisprot ids </span><span style=\"color: red;\">– </span><span style=\"color: grey;\">participating proteins</span><span style=\"color: green;\"> .</span><span style=\"color: grey;\">\n </span><span style=\"color: green;\">{</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">SELECT </span><span style=\"color: grey;\">?</span><span style=\"color: green;\">partProtId ?partProtName { \n# prote</span><span style=\"color: grey;\">i</span><span style=\"color: green;\">ns that have swissprot i</span><span style=\"color: grey;\">d</span><span style=\"color: green;\">s and a name .\n ?id</span><span style=\"color: grey;\">Field obo:IAO_0000219 ?partProtId .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?idField kiao:hasTemplate </span><span style=\"color: red;\">iao</span><span style=\"color: grey;\">uniprot:UniProtFileRecord_primaryAccessionDataField1 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?record obo:BFO_0000051 ?idField .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?record obo:BFO_0000051 ?nameField .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?nameField kiao:hasTemplate </span><span style=\"color: red;\">iao</span><span style=\"color: grey;\">uniprot:UniProtFileRecord_nameDataField1 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?nameField obo:IAO_0000219 ?partProtName . </span><span style=\"color: red;\">#</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">uniprot</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">name</span><span style=\"color: grey;\">\n</span><span style=\"color: red;\">\n</span><span style=\"color: green;\">#</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> #</span><span style=\"color: grey;\">protein interactions</span><span style=\"color: green;\"> .</span><span style=\"color: grey;\">\n </span><span style=\"color: green;\">{</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">SELECT </span><span style=\"color: grey;\">?prot</span><span style=\"color: green;\">Class ?intProtId { ?prot</span><span style=\"color: grey;\">Sub2 rdfs:subClassOf ?protClass .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?r_hasp owl:someValuesFrom ?protSub2 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?r_hasp rdf:type owl:Restriction .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?r_hasp owl:onProperty obo:RO_0000057 . </span><span style=\"color: red;\">#has_participant\n\n  </span><span style=\"color: grey;\">?interaction rdfs:subClassOf ?r_hasp .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?interaction rdfs:subClassOf ?rcard .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?rcard owl:cardinality 2 . </span><span style=\"color: red;\"># require 2 participants for a binary interaction\n  </span><span style=\"color: grey;\">?rcard owl:onProperty obo:RO_0000057 . </span><span style=\"color: red;\">#has_participant\n\n  </span><span style=\"color: grey;\">?interaction rdfs:subClassOf ?r_hasp2 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?r_hasp2 rdf:type owl:Restriction .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?r_hasp2 owl:onProperty obo:RO_0000057 . </span><span style=\"color: red;\">#has_participant\n  </span><span style=\"color: grey;\">?r_hasp2 owl:someValuesFrom ?protSub3 .</span><span style=\"color: red;\">\n\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protSub3 rdfs:subClassOf ?protClass3 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protClass3 rdfs:subClassOf ?taxonRest .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?protClass3 rdfs:subClassOf* obo:CHEBI_36080 . </span><span style=\"color: red;\">#protein\n  </span><span style=\"color: grey;\">?intProtId obo:IAO_0000219 ?protClass3 .</span><span style=\"color: red;\">\n\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">FILTER</span><span style=\"color: red;\"> </span><span style=\"color: grey;\">(?protSub3 != ?protSub2) .</span><span style=\"color: red;\">\n\n</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">} \n</span><span style=\"color: grey;\">#</span><span style=\"color: green;\"> </span><span style=\"color: grey;\">swisprot ids </span><span style=\"color: red;\">–</span><span style=\"color: green;\">?</span><span style=\"color: grey;\"> participating-protein</span><span style=\"color: red;\">’</span><span style=\"color: green;\">?</span><span style=\"color: grey;\">s protein interaction partner names</span><span style=\"color: green;\"> .</span><span style=\"color: grey;\">\n </span><span style=\"color: green;\">{</span><span style=\"color: grey;\"> </span><span style=\"color: green;\">SELECT </span><span style=\"color: grey;\">?i</span><span style=\"color: green;\">ntProtI</span><span style=\"color: grey;\">d</span><span style=\"color: green;\"> ?intProtName { \n# proteins that have swissprot ids and a name .\n ?id</span><span style=\"color: grey;\">Field</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> obo:IAO_0000219 ?intProtId . </span><span style=\"color: red;\">#field denotes ice id\n  </span><span style=\"color: grey;\">?idField</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> kiao:hasTemplate </span><span style=\"color: red;\">iao</span><span style=\"color: grey;\">uniprot:UniProtFileRecord_primaryAccessionDataField1 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?record</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> obo:BFO_0000051 ?idField</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> . </span><span style=\"color: red;\">#record has part id field (column)\n  </span><span style=\"color: grey;\">?record</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> obo:BFO_0000051 ?nameField</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> . </span><span style=\"color: red;\">#record has part name field\n  </span><span style=\"color: grey;\">?nameField</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> kiao:hasTemplate </span><span style=\"color: red;\">iao</span><span style=\"color: grey;\">uniprot:UniProtFileRecord_nameDataField1 .</span><span style=\"color: red;\">\n</span><span style=\"color: grey;\"> </span><span style=\"color: red;\"> </span><span style=\"color: grey;\">?nameField</span><span style=\"color: red;\">2</span><span style=\"color: grey;\"> obo:IAO_0000219 ?intProtName . </span><span style=\"color: red;\">#</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">uniprot</span><span style=\"color: green;\">}</span><span style=\"color: grey;\"> </span><span style=\"color: red;\">name\n  </span><span style=\"color: grey;\">}</span></pre>"
                },
                "selectedType": "BeakerDisplay",
                "elapsedTime": 0,
                "height": 2130
            },
            "evaluatorReader": true,
            "lineCount": 1,
            "isError": false
        },
        {
            "id": "codeUdRek0",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "document.getElementById(\"display\").innerHTML = \"\";",
                    "",
                    "var one = beaker.query1,",
                    "    other = beaker.query2,",
                    "    color = 'blue',",
                    "    span = null;",
                    "",
                    "var diff = JsDiff.diffChars(one, other),",
                    "    display = document.getElementById('display'),",
                    "    fragment = document.createDocumentFragment();",
                    "",
                    "diff.forEach(function(part){",
                    "  // green for additions, red for deletions",
                    "  // grey for common parts",
                    "  color = part.added ? 'green' :",
                    "    part.removed ? 'red' : 'grey';",
                    "  span = document.createElement('span');",
                    "  span.style.color = color;",
                    "  span.appendChild(document",
                    "    .createTextNode(part.value));",
                    "  fragment.appendChild(span);",
                    "});",
                    "",
                    "display.appendChild(fragment);"
                ]
            },
            "output": {
                "state": {},
                "result": "ERROR: circular objects are not supported",
                "selectedType": "Text",
                "pluginName": "JavaScript",
                "elapsedTime": 3963,
                "height": 46
            },
            "evaluatorReader": true,
            "lineCount": 24,
            "isError": false
        },
        {
            "id": "codeIgVsGw",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(kabob-query (angiogenesis))"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "HttpException: -1",
                        "\tat com.hp.hpl.jena.sparql.engine.http.HttpQuery.execPost(HttpQuery.java:385)",
                        "\tat com.hp.hpl.jena.sparql.engine.http.HttpQuery.exec(HttpQuery.java:275)",
                        "\tat com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP.execSelect(QueryEngineHTTP.java:345)",
                        "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "\tat java.lang.reflect.Method.invoke(Method.java:497)",
                        "\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93)",
                        "\tat clojure.lang.Reflector.invokeNoArgInstanceMember(Reflector.java:313)",
                        "\tat clj_sparql.core$query.invoke(core.clj:58)",
                        "\tat sparqler.core$kabob_query.invoke(core.clj:101)",
                        "\tat beaker_clojure_shell_9e3cf634_ca0d_4212_b418_fb877bde4a0c$eval1902.invoke(Unknown Source)",
                        "\tat clojure.lang.Compiler.eval(Compiler.java:6782)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7227)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7174)",
                        "\tat clojure.core$load_reader.invoke(core.clj:3933)",
                        "\tat clojure.core$load_string.invoke(core.clj:3943)",
                        "\tat beaker_clojure_shell_9e3cf634_ca0d_4212_b418_fb877bde4a0c$run_str_9e3cf634_ca0d_4212_b418_fb877bde4a0c.invoke(Unknown Source)",
                        "\tat clojure.lang.Var.invoke(Var.java:379)",
                        "\tat com.twosigma.beaker.clojure.util.ClojureEvaluator$workerThread$MyRunnable.run(ClojureEvaluator.java:239)",
                        "\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)",
                        "\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "\tat java.lang.Thread.run(Thread.java:745)",
                        "Caused by: java.net.UnknownHostException: amc-tantor.ucdenver.pvt: unknown error",
                        "\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)",
                        "\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)",
                        "\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)",
                        "\tat java.net.InetAddress.getAllByName0(InetAddress.java:1276)",
                        "\tat java.net.InetAddress.getAllByName(InetAddress.java:1192)",
                        "\tat java.net.InetAddress.getAllByName(InetAddress.java:1126)",
                        "\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)",
                        "\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:259)",
                        "\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:159)",
                        "\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:304)",
                        "\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:611)",
                        "\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:446)",
                        "\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:882)",
                        "\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)",
                        "\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)",
                        "\tat org.apache.http.impl.client.DecompressingHttpClient.execute(DecompressingHttpClient.java:158)",
                        "\tat org.apache.http.impl.client.DecompressingHttpClient.execute(DecompressingHttpClient.java:139)",
                        "\tat org.apache.jena.riot.web.HttpOp.exec(HttpOp.java:1043)",
                        "\tat org.apache.jena.riot.web.HttpOp.execHttpPostForm(HttpOp.java:800)",
                        "\tat org.apache.jena.riot.web.HttpOp.execHttpPostFormStream(HttpOp.java:749)",
                        "\tat com.hp.hpl.jena.sparql.engine.http.HttpQuery.execPost(HttpQuery.java:378)",
                        "\t... 24 more",
                        ""
                    ]
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Clojure",
                "shellId": "9e3cf634-ca0d-4212-b418-fb877bde4a0c",
                "elapsedTime": 9450,
                "height": 62
            },
            "evaluatorReader": false,
            "lineCount": 1,
            "isError": true
        },
        {
            "id": "codeX1zV4v",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    ""
                ]
            },
            "output": {
                "state": {}
            },
            "evaluatorReader": false
        }
    ],
    "namespace": {
        "query": "PREFIX franz: <http://franz.com> PREFIX kiao: <http://kabob.ucdenver.edu/iao/> PREFIX obo: <http://purl.obolibrary.org/obo/> PREFIX oboMeta: <http://www.geneontology.org/formats/oboInOwl#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX uniprot: <http://kabob.ucdenver.edu/iao/uniprot/> PREFIX franzOption_clauseReorderer: <franz:identity> PREFIX FranzOption_chunkProcessingAllowed: <franz:yes> PREFIX franzOption_memoryLimit: <franz:60g> PREFIX franzOption_memoryExhaustionWarningPercentage: <franz:90.0>SELECT DISTINCT ?angioSubs ?partProtId ?intProtId WHERE { \n# select angiogenesis GOBPs and its subclasses that are in the OBO namespace .\n { SELECT ?angioSubs { \n# subclasses of [:obo :GO_0001525] .\n ?angioSubs rdfs:subClassOf* obo:GO_0001525 . ?angioSubs oboMeta:hasOBONamespace ?OBONamespace } } \n# restriction only want human proteins that participate in these GOBPs .\n { SELECT ?protClass ?angioSubs { \n# proteins that participate in a subclass .\n ?anonSubclass rdfs:subClassOf ?angioSubs . ?anonSubclass rdfs:subClassOf ?protRest . ?protRest rdf:type owl:Restriction . ?protRest owl:onProperty obo:RO_0000057 . ?protRest owl:someValuesFrom ?protSub . ?protSub rdfs:subClassOf ?protClass . ?protClass rdfs:subClassOf* obo:CHEBI_36080 . } } ?partProtID obo:IAO_0000219 ?protClass . { SELECT ?protClass { \n# Gene or Gene Products in_taxon [:obo :NCBITaxon_9606] .\n ?protClass rdfs:subClassOf ?taxonrestriction . ?taxonrestriction owl:onProperty obo:RO_0002162 . ?taxonrestriction owl:someValuesFrom obo:NCBITaxon_9606 . } } \n# swisprot ids participating proteins .\n { SELECT ?partProtId ?partProtName { \n# proteins that have swissprot ids and a name .\n ?idField obo:IAO_0000219 ?partProtId . ?idField kiao:hasTemplate uniprot:UniProtFileRecord_primaryAccessionDataField1 . ?record obo:BFO_0000051 ?idField . ?record obo:BFO_0000051 ?nameField . ?nameField kiao:hasTemplate uniprot:UniProtFileRecord_nameDataField1 . ?nameField obo:IAO_0000219 ?partProtName . } } \n# protein interactions .\n { SELECT ?protClass ?intProtId { ?protSub2 rdfs:subClassOf ?protClass . ?r_hasp owl:someValuesFrom ?protSub2 . ?r_hasp rdf:type owl:Restriction . ?r_hasp owl:onProperty obo:RO_0000057 . ?interaction rdfs:subClassOf ?r_hasp . ?interaction rdfs:subClassOf ?rcard . ?rcard owl:cardinality 2 . ?rcard owl:onProperty obo:RO_0000057 . ?interaction rdfs:subClassOf ?r_hasp2 . ?r_hasp2 rdf:type owl:Restriction . ?r_hasp2 owl:onProperty obo:RO_0000057 . ?r_hasp2 owl:someValuesFrom ?protSub3 . ?protSub3 rdfs:subClassOf ?protClass3 . ?protClass3 rdfs:subClassOf ?taxonRest . ?protClass3 rdfs:subClassOf* obo:CHEBI_36080 . ?intProtId obo:IAO_0000219 ?protClass3 . FILTER(?protSub3 != ?protSub2) . } } \n# swisprot ids ? participating-protein?s protein interaction partner names .\n { SELECT ?intProtId ?intProtName { \n# proteins that have swissprot ids and a name .\n ?idField obo:IAO_0000219 ?intProtId . ?idField kiao:hasTemplate uniprot:UniProtFileRecord_primaryAccessionDataField1 . ?record obo:BFO_0000051 ?idField . ?record obo:BFO_0000051 ?nameField . ?nameField kiao:hasTemplate uniprot:UniProtFileRecord_nameDataField1 . ?nameField obo:IAO_0000219 ?intProtName . } } }",
        "result": "{\n  \"head\": {\n    \"vars\": [ \"O\" , \"P\" , \"S\" ]\n  } ,\n  \"results\": {\n    \"bindings\": [\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecordSchema1\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/hasTemplate\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_WcWgclLLs762j0luZCfL7dRS-eA\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/FieldValue\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecord_geneNameDataField1\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/hasTemplate\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk\" }\n      } ,\n      {\n        \"O\": { \"type\": \"literal\" , \"xml:lang\": \"en\" , \"value\": \"aldehyde dehydrogenase 2, mitochondrial\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/IAO_0000219\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecord\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneId_Z4oFVmGP0rKdu_dGBYOjxNnL_qQ\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_nboTermName_-UcYugeQS-4851Q02dVbzEMB8Zc\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_Vf6lmKZ5igdnQV-5f3hBe3EjpdQ\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_nboTermId_6eegFKonFaEWcLP9VMoLU8Ni0L0\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneSymbol_PAF3AKoD5w8e_EaIjBSb_ZxAhIw\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      }\n    ]\n  }\n}\n",
        "resultmap": {
            "type": "TableDisplay",
            "subtype": "ListOfMaps",
            "columnNames": [
                "s",
                "p",
                "o"
            ],
            "values": [
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI",
                    "http://purl.obolibrary.org/obo/BFO_0000051",
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneSymbol_PAF3AKoD5w8e_EaIjBSb_ZxAhIw"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI",
                    "http://purl.obolibrary.org/obo/BFO_0000051",
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneId_Z4oFVmGP0rKdu_dGBYOjxNnL_qQ"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI",
                    "http://purl.obolibrary.org/obo/BFO_0000051",
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_Vf6lmKZ5igdnQV-5f3hBe3EjpdQ"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI",
                    "http://purl.obolibrary.org/obo/BFO_0000051",
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_nboTermName_-UcYugeQS-4851Q02dVbzEMB8Zc"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk",
                    "http://purl.obolibrary.org/obo/IAO_0000219",
                    "aldehyde dehydrogenase 2, mitochondrial"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_WcWgclLLs762j0luZCfL7dRS-eA",
                    "http://kabob.ucdenver.edu/iao/hasTemplate",
                    "http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecordSchema1"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk",
                    "http://kabob.ucdenver.edu/iao/hasTemplate",
                    "http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecord_geneNameDataField1"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI",
                    "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
                    "http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecord"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI",
                    "http://purl.obolibrary.org/obo/BFO_0000051",
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_nboTermId_6eegFKonFaEWcLP9VMoLU8Ni0L0"
                ],
                [
                    "http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk",
                    "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
                    "http://kabob.ucdenver.edu/iao/FieldValue"
                ]
            ],
            "types": [
                "string",
                "string",
                "string"
            ]
        },
        "resultjson": "{\n  \"head\": {\n    \"vars\": [ \"O\" , \"P\" , \"S\" ]\n  } ,\n  \"results\": {\n    \"bindings\": [\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecordSchema1\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/hasTemplate\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_WcWgclLLs762j0luZCfL7dRS-eA\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/FieldValue\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecord_geneNameDataField1\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/hasTemplate\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk\" }\n      } ,\n      {\n        \"O\": { \"type\": \"literal\" , \"xml:lang\": \"en\" , \"value\": \"aldehyde dehydrogenase 2, mitochondrial\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/IAO_0000219\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_hg5bjIXctYnHvOqSq0ZKQjus8Uk\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/NboAnnotationFileRecord\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneId_Z4oFVmGP0rKdu_dGBYOjxNnL_qQ\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_nboTermName_-UcYugeQS-4851Q02dVbzEMB8Zc\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneName_Vf6lmKZ5igdnQV-5f3hBe3EjpdQ\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_nboTermId_6eegFKonFaEWcLP9VMoLU8Ni0L0\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      } ,\n      {\n        \"O\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/F_NboAnnotationFileRecord_geneSymbol_PAF3AKoD5w8e_EaIjBSb_ZxAhIw\" } ,\n        \"P\": { \"type\": \"uri\" , \"value\": \"http://purl.obolibrary.org/obo/BFO_0000051\" } ,\n        \"S\": { \"type\": \"uri\" , \"value\": \"http://kabob.ucdenver.edu/iao/nbo/R_NboAnnotationFileRecord_SREUgQjVSDkCsIlf_SC7-zAaPGI\" }\n      }\n    ]\n  }\n}\n",
        "query1": "PREFIX franzOption_clauseReorderer: <franz:identity>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX kbio: <http://kabob.ucdenver.edu/bio/>\nPREFIX iaohgnc: <http://kabob.ucdenver.edu/iao/hgnc/>\n\n\nSELECT ?participant \nWHERE {\n\niaohgnc:HGNC_SEPT2_ICE obo:IAO_0000219 ?gene  . # SEPT2\n\n## gene specific gene or gene product abstraction ?gorgporv\n?gene rdfs:subClassOf* ?gorgporv .  \n?gorgporv rdf:type kbio:GeneSpecificGorGPorVClass .\n\n## all gene products\n?geneproduct rdfs:subClassOf* ?gorgporv.\n\n## get interactions they participate in\n?participant_r owl:someValuesFrom ?geneproduct.\n?participant_r owl:onProperty obo:RO_0000057 . # RO:has_participant\n?interaction rdfs:subClassOf ?participant_r .\n\n## look at only interactions\n?interaction rdfs:subClassOf obo:MI_0407 . # interaction\n\n## get all the other participants in those interactions\n?interaction rdfs:subClassOf ?participant_r2.\nFILTER (?participant_r != ?participant_r2) . # insure different\n?participant_r2 owl:onProperty obo:RO_0000057 . # RO:has_participant\n?participant_r2 owl:someValuesFrom ?participant.\n}",
        "query2": "PREFIX franz: <http://franz.com> PREFIX kiao: <http://kabob.ucdenver.edu/iao/> PREFIX obo: <http://purl.obolibrary.org/obo/> PREFIX oboMeta: <http://www.geneontology.org/formats/oboInOwl#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX uniprot: <http://kabob.ucdenver.edu/iao/uniprot/> PREFIX franzOption_clauseReorderer: <franz:identity>\n\n           PREFIX franzOption_chunkProcessingAllowed: <franz:yes>\n\n           PREFIX franzOption_memoryLimit: <franz:60g>\n\n           PREFIX franzOption_memoryExhaustionWarningPercentage: <franz:90.0>\nSELECT DISTINCT ?angioSubs ?partProtId ?intProtId WHERE { \n# VEGF - angiogenesis GOBP/subclasses, the proteins that participate in those GOBPs, and their protein-protein interactions .\n \n# select angiogenesis GOBPs and its subclasses that are in the OBO namespace .\n { SELECT ?angioSubs { \n# subclasses of [:obo :GO_0001525] .\n ?angioSubs rdfs:subClassOf* obo:GO_0001525 . ?angioSubs oboMeta:hasOBONamespace ?OBONamespace } } \n# restriction only want human proteins that participate in these GOBPs .\n { SELECT ?protClass ?angioSubs { \n# proteins that participate in a subclass .\n ?anonSubclass rdfs:subClassOf ?angioSubs . ?anonSubclass rdfs:subClassOf ?protRest . ?protRest rdf:type owl:Restriction . ?protRest owl:onProperty obo:RO_0000057 . ?protRest owl:someValuesFrom ?protSub . ?protSub rdfs:subClassOf ?protClass . ?protClass rdfs:subClassOf* obo:CHEBI_36080 . } } ?partProtId obo:IAO_0000219 ?protClass . { SELECT ?protClass { \n# Gene or Gene Products in_taxon [:obo :NCBITaxon_9606] .\n ?protClass rdfs:subClassOf ?taxonrestriction . ?taxonrestriction owl:onProperty obo:RO_0002162 . ?taxonrestriction owl:someValuesFrom obo:NCBITaxon_9606 . } } \n# swisprot ids participating proteins .\n { SELECT ?partProtId ?partProtName { \n# proteins that have swissprot ids and a name .\n ?idField obo:IAO_0000219 ?partProtId . ?idField kiao:hasTemplate uniprot:UniProtFileRecord_primaryAccessionDataField1 . ?record obo:BFO_0000051 ?idField . ?record obo:BFO_0000051 ?nameField . ?nameField kiao:hasTemplate uniprot:UniProtFileRecord_nameDataField1 . ?nameField obo:IAO_0000219 ?partProtName . } } \n# protein interactions .\n { SELECT ?protClass ?intProtId { ?protSub2 rdfs:subClassOf ?protClass . ?r_hasp owl:someValuesFrom ?protSub2 . ?r_hasp rdf:type owl:Restriction . ?r_hasp owl:onProperty obo:RO_0000057 . ?interaction rdfs:subClassOf ?r_hasp . ?interaction rdfs:subClassOf ?rcard . ?rcard owl:cardinality 2 . ?rcard owl:onProperty obo:RO_0000057 . ?interaction rdfs:subClassOf ?r_hasp2 . ?r_hasp2 rdf:type owl:Restriction . ?r_hasp2 owl:onProperty obo:RO_0000057 . ?r_hasp2 owl:someValuesFrom ?protSub3 . ?protSub3 rdfs:subClassOf ?protClass3 . ?protClass3 rdfs:subClassOf ?taxonRest . ?protClass3 rdfs:subClassOf* obo:CHEBI_36080 . ?intProtId obo:IAO_0000219 ?protClass3 . FILTER(?protSub3 != ?protSub2) . } } \n# swisprot ids ? participating-protein?s protein interaction partner names .\n { SELECT ?intProtId ?intProtName { \n# proteins that have swissprot ids and a name .\n ?idField obo:IAO_0000219 ?intProtId . ?idField kiao:hasTemplate uniprot:UniProtFileRecord_primaryAccessionDataField1 . ?record obo:BFO_0000051 ?idField . ?record obo:BFO_0000051 ?nameField . ?nameField kiao:hasTemplate uniprot:UniProtFileRecord_nameDataField1 . ?nameField obo:IAO_0000219 ?intProtName . } } }"
    }
}
