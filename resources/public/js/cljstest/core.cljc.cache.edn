;; Analyzed by ClojureScript 0.0-3211
{:name cljstest.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {rdfs:label cljstest.terms}, :requires {terms cljstest.terms, cljstest.terms cljstest.terms}, :imports nil, :defs {abs {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/core.cljc", :line 3, :column 7, :end-line 3, :end-column 10, :arglists (quote ([x])), :doc "Absolute value of a number\n~~~klipse\n  (map abs (range -5 5))\n~~~\n"}, :name cljstest.core/abs, :variadic false, :file "src/cljstest/core.cljc", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Absolute value of a number\n~~~klipse\n  (map abs (range -5 5))\n~~~\n", :test true}, testquery {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/core.cljc", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([])), :doc "Test Query\n~~~klipse\n  terms/rdfs:label\n~~~\n  "}, :name cljstest.core/testquery, :variadic false, :file "src/cljstest/core.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Test Query\n~~~klipse\n  terms/rdfs:label\n~~~\n  ", :test true}}}