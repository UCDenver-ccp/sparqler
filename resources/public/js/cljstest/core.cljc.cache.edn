;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name cljstest.core, :imports nil, :requires nil, :uses nil, :defs {abs {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/core.cljc", :line 4, :column 7, :end-line 4, :end-column 10, :arglists (quote ([x])), :doc "Absolute value of a number\n~~~klipse\n  (map abs (range -5 5))\n~~~\n"}, :name cljstest.core/abs, :variadic false, :file "src/cljstest/core.cljc", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Absolute value of a number\n~~~klipse\n  (map abs (range -5 5))\n~~~\n", :test true}, test-query {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/core.cljc", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([])), :doc "Test Query\n~~~klipse\n  rdfs:label\n~~~\n  "}, :name cljstest.core/test-query, :variadic false, :file "src/cljstest/core.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Test Query\n~~~klipse\n  rdfs:label\n~~~\n  ", :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:as}, :order [:as]}, :doc nil}