;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{min group-by concat filter max count}, :name matsu_sparql, :imports nil, :requires {clojure.walk clojure.walk, matsu_compiler matsu_compiler, matsu_core matsu_core}, :uses {encode matsu_compiler, compile-query matsu_compiler, empty-query matsu_core, postwalk-replace clojure.walk}, :defs {delete-data {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 292, :column 7, :end-line 292, :end-column 18, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/delete-data, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 292, :end-line 292, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, base {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 80, :column 7, :end-line 80, :end-column 11, :arglists (quote ([q uri]))}, :name matsu_sparql/base, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([q uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q uri])), :test true}, union {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 117, :column 7, :end-line 117, :end-column 12, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/union, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, order-by-desc {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 176, :column 7, :end-line 176, :end-column 20, :arglists (quote ([q v]))}, :name matsu_sparql/order-by-desc, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 20, :method-params ([q v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q v])), :test true}, construct {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 90, :column 7, :end-line 90, :end-column 16, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/construct, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, lang-matches {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 236, :column 7, :end-line 236, :end-column 19, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/lang-matches, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, group-concat {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 204, :column 7, :end-line 204, :end-column 19, :arglists (quote ([v sep]))}, :name matsu_sparql/group-concat, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 19, :method-params ([v sep]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v sep])), :test true}, a {:name matsu_sparql/a, :file "src/cljstest/matsu_sparql.cljc", :line 13, :column 1, :end-line 13, :end-column 7, :test true, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 13, :column 6, :end-line 13, :end-column 7}}, sum {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 198, :column 7, :end-line 198, :end-column 10, :arglists (quote ([v]))}, :name matsu_sparql/sum, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, filter-not-exists {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 134, :column 7, :end-line 134, :end-column 24, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/filter-not-exists, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, ask {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 94, :column 7, :end-line 94, :end-column 10, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/ask, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, bind {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 212, :column 7, :end-line 212, :end-column 11, :arglists (quote ([v]))}, :name matsu_sparql/bind, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, select {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 86, :column 7, :end-line 86, :end-column 13, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/select, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, || {:name matsu_sparql/||, :file "src/cljstest/matsu_sparql.cljc", :line 19, :column 1, :end-line 19, :end-column 8, :test true, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 19, :column 6, :end-line 19, :end-column 8}}, min {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 194, :column 7, :end-line 194, :end-column 10, :arglists (quote ([v]))}, :name matsu_sparql/min, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, having {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 186, :column 7, :end-line 186, :end-column 13, :arglists (quote ([q & expr])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q expr)], :arglists [[q & expr]], :arglists-meta (nil)}}, :name matsu_sparql/having, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q expr)], :arglists [[q & expr]], :arglists-meta (nil)}, :method-params [(q expr)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists [[q & expr]], :test true}, insert {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 296, :column 7, :end-line 296, :end-column 13, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/insert, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, where {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 106, :column 7, :end-line 106, :end-column 12, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/where, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, group {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 73, :column 7, :end-line 73, :end-column 12, :arglists (quote ([& more])), :doc "Delimits a graph pattern within curly braces. (Not a SPARQL keyword.)", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/group, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :doc "Delimits a graph pattern within curly braces. (Not a SPARQL keyword.)", :test true}, desc {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 168, :column 7, :end-line 168, :end-column 11, :arglists (quote ([v]))}, :name matsu_sparql/desc, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, same-term {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 245, :column 7, :end-line 245, :end-column 16, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/same-term, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, limit {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 162, :column 7, :end-line 162, :end-column 12, :arglists (quote ([q n]))}, :name matsu_sparql/limit, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :method-params ([q n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q n])), :test true}, select-reduced {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 158, :column 7, :end-line 158, :end-column 21, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/select-reduced, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, group-by {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 182, :column 7, :end-line 182, :end-column 15, :arglists (quote ([q & expr])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q expr)], :arglists [[q & expr]], :arglists-meta (nil)}}, :name matsu_sparql/group-by, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q expr)], :arglists [[q & expr]], :arglists-meta (nil)}, :method-params [(q expr)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists [[q & expr]], :test true}, !bound {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 224, :column 7, :end-line 224, :end-column 13, :arglists (quote ([v]))}, :name matsu_sparql/!bound, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, offset {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 165, :column 7, :end-line 165, :end-column 13, :arglists (quote ([q n]))}, :name matsu_sparql/offset, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :method-params ([q n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q n])), :test true}, concat {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 228, :column 7, :end-line 228, :end-column 13, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/concat, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, order-by-asc {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 178, :column 7, :end-line 178, :end-column 19, :arglists (quote ([q v]))}, :name matsu_sparql/order-by-asc, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 19, :method-params ([q v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q v])), :test true}, raw {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 323, :column 7, :end-line 323, :end-column 10, :arglists (quote ([string]))}, :name matsu_sparql/raw, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string])), :test true}, datatype {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 272, :column 7, :end-line 272, :end-column 15, :arglists (quote ([literal]))}, :name matsu_sparql/datatype, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 15, :method-params ([literal]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([literal])), :test true}, asc {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 170, :column 7, :end-line 170, :end-column 10, :arglists (quote ([v]))}, :name matsu_sparql/asc, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, no-bounds {:name matsu_sparql/no-bounds, :file "src/cljstest/matsu_sparql.cljc", :line 125, :column 1, :end-line 125, :end-column 15, :test true, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 125, :column 6, :end-line 125, :end-column 15}, :doc "Don't use parentheses if FILTER is to be followed by one of these functions."}, && {:name matsu_sparql/&&, :file "src/cljstest/matsu_sparql.cljc", :line 17, :column 1, :end-line 17, :end-column 8, :test true, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 17, :column 6, :end-line 17, :end-column 8}}, delete {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 300, :column 7, :end-line 300, :end-column 13, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/delete, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, minus {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 140, :column 7, :end-line 140, :end-column 12, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/minus, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, is-iri {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 251, :column 7, :end-line 251, :end-column 13, :arglists (quote ([term]))}, :name matsu_sparql/is-iri, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :method-params ([term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 1, :fn-var true, :arglists (quote ([term])), :test true}, select-distinct {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 154, :column 7, :end-line 154, :end-column 22, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/select-distinct, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, is-literal {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 263, :column 7, :end-line 263, :end-column 17, :arglists (quote ([term]))}, :name matsu_sparql/is-literal, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 17, :method-params ([term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([term])), :test true}, prefix {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 319, :column 7, :end-line 319, :end-column 13, :arglists (quote ([q more]))}, :name matsu_sparql/prefix, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :method-params ([q more]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 319, :end-line 319, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q more])), :test true}, lang {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 269, :column 7, :end-line 269, :end-column 11, :arglists (quote ([literal]))}, :name matsu_sparql/lang, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([literal]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([literal])), :test true}, sample {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 207, :column 7, :end-line 207, :end-column 13, :arglists (quote ([v]))}, :name matsu_sparql/sample, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, subselect {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 312, :column 7, :end-line 312, :end-column 16, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/subselect, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, str2 {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 266, :column 7, :end-line 266, :end-column 11, :arglists (quote ([term]))}, :name matsu_sparql/str2, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 1, :fn-var true, :arglists (quote ([term])), :test true}, bound {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 222, :column 7, :end-line 222, :end-column 12, :arglists (quote ([v]))}, :name matsu_sparql/bound, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, insert-data {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 288, :column 7, :end-line 288, :end-column 18, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/insert-data, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, filter {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 129, :column 7, :end-line 129, :end-column 13, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/filter, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, from-named {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 148, :column 7, :end-line 148, :end-column 17, :arglists (quote ([q & graphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q graphs)], :arglists [[q & graphs]], :arglists-meta (nil)}}, :name matsu_sparql/from-named, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q graphs)], :arglists [[q & graphs]], :arglists-meta (nil)}, :method-params [(q graphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists [[q & graphs]], :test true}, values {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 216, :column 7, :end-line 216, :end-column 13, :arglists (quote ([v & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(v more)], :arglists [[v & more]], :arglists-meta (nil)}}, :name matsu_sparql/values, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(v more)], :arglists [[v & more]], :arglists-meta (nil)}, :method-params [(v more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists [[v & more]], :test true}, is-blank {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 254, :column 7, :end-line 254, :end-column 15, :arglists (quote ([term]))}, :name matsu_sparql/is-blank, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 15, :method-params ([term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([term])), :test true}, with {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 285, :column 7, :end-line 285, :end-column 11, :arglists (quote ([q uri]))}, :name matsu_sparql/with, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([q uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q uri])), :test true}, from {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 145, :column 7, :end-line 145, :end-column 11, :arglists (quote ([q graph]))}, :name matsu_sparql/from, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([q graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q graph])), :test true}, !# {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 309, :column 7, :end-line 309, :end-column 9, :arglists (quote ([comment]))}, :name matsu_sparql/!#, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 9, :method-params ([comment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comment])), :test true}, is-numeric {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 260, :column 7, :end-line 260, :end-column 17, :arglists (quote ([term]))}, :name matsu_sparql/is-numeric, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 17, :method-params ([term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([term])), :test true}, max {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 196, :column 7, :end-line 196, :end-column 10, :arglists (quote ([v]))}, :name matsu_sparql/max, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, != {:name matsu_sparql/!=, :file "src/cljstest/matsu_sparql.cljc", :line 21, :column 1, :end-line 21, :end-column 8, :test true, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 21, :column 6, :end-line 21, :end-column 8}}, graph {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 120, :column 7, :end-line 120, :end-column 12, :arglists (quote ([g & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(g more)], :arglists [[g & more]], :arglists-meta (nil)}}, :name matsu_sparql/graph, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(g more)], :arglists [[g & more]], :arglists-meta (nil)}, :method-params [(g more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists [[g & more]], :test true}, count {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 200, :column 7, :end-line 200, :end-column 12, :arglists (quote ([v]))}, :name matsu_sparql/count, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, !same-term {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 248, :column 7, :end-line 248, :end-column 17, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/!same-term, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, optional {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 114, :column 7, :end-line 114, :end-column 15, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/optional, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, where- {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 109, :column 7, :end-line 109, :end-column 13, :arglists (quote ([q & more])), :doc "Where clause without the optional WHERE keyword", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/where-, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :doc "Where clause without the optional WHERE keyword", :test true}, order-by {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 172, :column 7, :end-line 172, :end-column 15, :arglists (quote ([q & expr])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q expr)], :arglists [[q & expr]], :arglists-meta (nil)}}, :name matsu_sparql/order-by, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q expr)], :arglists [[q & expr]], :arglists-meta (nil)}, :method-params [(q expr)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists [[q & expr]], :test true}, flat {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 61, :column 7, :end-line 61, :end-column 11, :arglists (quote ([coll]))}, :name matsu_sparql/flat, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 11, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :test true}, describe {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 98, :column 7, :end-line 98, :end-column 15, :arglists (quote ([q & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}}, :name matsu_sparql/describe, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(q more)], :arglists [[q & more]], :arglists-meta (nil)}, :method-params [(q more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists [[q & more]], :test true}, count-distinct {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 202, :column 7, :end-line 202, :end-column 21, :arglists (quote ([v]))}, :name matsu_sparql/count-distinct, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 21, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, filter-exists {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 137, :column 7, :end-line 137, :end-column 20, :arglists (quote ([& more])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}}, :name matsu_sparql/filter-exists, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(more)], :arglists [[& more]], :arglists-meta (nil)}, :method-params [(more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 0, :fn-var true, :arglists [[& more]], :test true}, avg {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 192, :column 7, :end-line 192, :end-column 10, :arglists (quote ([v]))}, :name matsu_sparql/avg, :variadic false, :file "src/cljstest/matsu_sparql.cljc", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, regex {:protocol-inline nil, :meta {:file "/Users/dcmcshan/Clones/sparqler/src/cljstest/matsu_sparql.cljc", :line 231, :column 7, :end-line 231, :end-column 12, :arglists (quote ([v regex & flags])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v regex flags)], :arglists [[v regex & flags]], :arglists-meta (nil)}}, :name matsu_sparql/regex, :variadic true, :file "src/cljstest/matsu_sparql.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v regex flags)], :arglists [[v regex & flags]], :arglists-meta (nil)}, :method-params [(v regex flags)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists [[v regex & flags]], :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:having :sep :insert :where :local-prefixes :limit :group-by :offset :content :delete :bounds :prefix :from-named :with :from :order-by :tag :query-form :base}, :order [:local-prefixes :tag :sep :bounds :content :base :query-form :where :from :from-named :limit :offset :order-by :group-by :having :with :insert :delete :prefix]}, :doc "Matsu SPARQL que DSL functions"}